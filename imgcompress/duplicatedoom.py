s = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAMAAABHPGVmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAMAUExURQAAABIrUzY8bm0simwsjWE1hIBdk5FcpJthrelPj/JOl/RNk7ORxNSq5P///ww9PYQAAAEAdFJOU////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wBT9wclAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAAGXRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS44NzuAXQAABMRJREFUaEPtmetymzAQhcGpayU1vP/bunvXahGIi5wfmWjaTofY+jhnj8SiDK9vGMM3MF6/kEMu/0y7Ujpkwv4Pe7tSGmXs//6uTzrImKZ0u91G/Dvu+vLeDxlkHG8ASczojFEIzp3SZFq6YgSC9w5KYLAWGt60S6FgiHiESqZEkD80DAOX9xag8jmCCAOl4B8G/KPBGNR4gYIQunU2DGfLCIkAxK4PBMIlVTEVEmcIBDKuSAElLIQgcM+ewRkQxgW/BMIMgCwZbBYm4nTph0IIpYoKzhlGhWrWNQjuV4gCt0oIXsO4dVDCJsjOaNFVIYKgaF+wy301zcDi9SFmKaMbZBjmeZ4mxrwL8noBBm8dMQIZrCLd7BoGmRQTTdnqUpKi7wIheucDYBiiVy7UvYTMAhmG+x0yABCVdmlXCRCeEwNwh78QNUvXlZIEuzKEKBMo6W3XXRiohCFuXGktfEt0v7NbBHm8DcIMpDwC5FKTVCghdxAyPN4G4Q33HGSz9Sza1AhxqwTW5uomjADromq+GiRRE6FK7miXY0zrEANYu7a4mwzRuEKQYcFjgoe8p+DqryuRDkFb9Won7SEiBQjEsI0MN+Y1CD2hx688eG8tbyjXhJsr/AcZfh0SpO4XXPUEZHHjU1BqkAAQRs0vYDgR8l9+SHiKSxc3qZXB234FYowPHmuU8k1rQaB68ovREiIMIThO1FK+/WqMDcYIdP42foRyMqNAqJpAia/YsFxsSKoYU4EAAxGyPpRGnpWUrfd4qBCvZWZ8fBVSMFYZgSRXmWMQWga0TBTCQqEdRAb+VOpmFFbiI9ZWIqZhdqD2WrWU/gIjE2TzspAdgVACyDGGuIwnYMhikHSoloWUhhIsijAI4jOeXImkT+OyLErfhMg7BAkpIUUn5ikCyVXZBRnxDj1Etjbf5wvFFWU/hIJF6QyQz2mai5cJR8lF4W2ipYT2X2aUdi0g/B5FVTkMAYp8DzNmhZ8/Z8BUpDiI+dVUMkF4VUiGfOKIrStJCRDyqw0hiizinGBgQPXLNzxXPlrz9oDYAQGKmpwh85oSqd9uCB2p0JKPQuZp1a4IQb82T1NtExlpxxMkXCUINOThhdgl0ZQ0ISaFVot6RWgMVyeIo+T0ij4IVx8lfNIVB17jjaViVxlh7ls2a6LnaYHSgugGyQcpQGlD4DGl50RFVZZCYGORrZTTeADyfMrT0JyzniaetlyBPPU0SvoYwLKmHRAqStuuZ5wzbUGsjyS7+IjrJESkUNfiBnaA2qyehag9IEUNi5u9QfipfULJt0JeuSoVJdzan1fSkjKGkkDN6d3pSLoss2tFqUFaT0bKjZ+wpsQZRuEq3Xo1u5UeEJrjmF1y26iuEuLgVv79S2+IvTbSKpFxHWJFcSXBPtC14z0hLsDlCUsLUtivGS4v6v6FJRG3Vk8k6kcnRyC6OS4OivopUbMqZ1F7IP4dztaORVg9ZEj1GLEBCW7V1omHrJxUdoOAkNXD0G0ICXHGsJJ4lS7ir5PWxmlIKNTmke52wx2FkJK6vFUZrQ1yMd1bINRoFQcEqCRebf5GrbVOQstt83l0Z0iebrFAT9eEl7cbbqZ8dWt6/lnbrvYczU/8QpoW+Q/8HLv+A6ycucBqzlh5AAAAAElFTkSuQmCC"

result = ""
prev = ""
count = 0
for curr in s + " ":
    if prev:
        if curr == prev:
            count += 1
        else:
            #print "%s: %d occurence(s)." % (prev, count)
            if count > 2:
                result += "@%d%s" % (count, prev) # Encoding long repeated strings as @[no. repeat][char]
            elif count > 1:
                result += "%s" % prev*2 # Manually print 2 characters to save 1 character.
            else:
                result += prev # No repetitions
            count = 1
    prev = curr

print result
